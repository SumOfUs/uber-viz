---
title: How Uber Rolls
---
<style>
body {
  background: green;
}
.states {
  fill: #333;
  stroke: #555;
}
#stories-table {
  background: #333;
  width: 520px;
  margin-top: 20px;
  margin-left: 280px;
}
#stories-table td {
  border: 1px solid #555;
}
.issue-icon {
  background-image: url('/images/uber-sprite.png');

  width: 100px;
  height: 100px;
}
.map-graphic {
  position: relative;
  height: 500px;
  width: 800px;
  overflow: hidden;
}
.map-graphic__component {
  position: absolute;
  top: 0;
  left: -80px;
}
#map-bubbles-chart .chart-body {
  transform: translateX(0px) translateY(-10px);
}
#map-bubbles-chart {
  z-index: 99;
}
#us-states-map {
  z-index: 10;
}
g.axis {
  display: none;
}
#type-chart {
  position: absolute;
  top: 510px;
  left: -10px;
}
.uber-viz {
  width: 800px;
  min-height: 1000px;
  margin: 20px auto;
  overflow: hidden;
  position: relative;
}

.bubble-chart__taglines h4 {
  margin: 0 0 6px;
  font-size: 14px;
}
.bubble-chart__taglines ul {
  font-size: 12px;
  padding-left: 14px;
}
.tip {
  width: 230px;
  padding: 8px;
}

body {
  background-image: url('/images/bg-tile.png');
  background-color: #161616;
}
</style>

<div class="uber-viz">
  <div class="map-graphic">
    <div id="map-bubbles-chart" class="map-graphic__component"></div>
    <div id="us-states-map" class="map-graphic__component"></div>
  </div>
  <div id="type-chart"></div>
  <div id="stories-table"></div>
</div>

<script type="text/javascript" src='https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore.js'></script>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crossfilter/1.3.12/crossfilter.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/dc/2.0.1/dc.css" />
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/dc/2.0.1/dc.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3-tip/0.6.3/d3-tip.min.js"></script>
<script src="/javascripts/dc-tooltip.js"></script>


<script>
var width = 960,
    height = 500;

var projection = d3.geo.albers();
var path = d3.geo.path()
    .projection(projection);

var mapSvg = d3.select("#us-states-map").append("svg")
    .attr("width", width)
    .attr("height", height);

var bubbleSvg = d3.select('#map-bubbles-chart').append('svg')
    .attr("width", width)
    .attr("height", height);

var typeSvg = d3.select('#type-chart').append('svg')
    .attr("width", 300)
    .attr("height", 400);

d3.csv('/javascripts/uber-cities.csv', function(error, cities){
  console.log(error, cities);

  var ndx = crossfilter(cities);
  var locationDimension = ndx.dimension(function(d) { return d.location; });
  var locationGroup = locationDimension.group().reduce(
    function (p, v) {
      if (p.lat !== v.lat) p.lat = v.lat;
      if (p.long !== v.long) p.long = v.long;
      p.count++;
      if (p.typeCounts.hasOwnProperty(v.type)) {
        p.typeCounts[v.type]++;
      } else {
        p.typeCounts[v.type] = 1;
      }
      p.taglines = _.union(p.taglines, [v.tagline]);
      p.location = v.location;
      return p;
    },
    function (p, v) {
      p.count--;
      p.typeCounts[v.type]--;
      if (p.typeCounts[v.type] < 1) delete p.typeCounts[v.type];
      p.taglines = _.omit(p.taglines, v.tagline);
      return p;
    },
    function () {
      return {
        lat: null,
        long: null,
        typeCounts: {},
        taglines: [],
        count: 0
      };
    }
  );
  var typeDimension = ndx.dimension(function(d) { return d.type; });
  var typeGroup = typeDimension.group();

  var mapBubbles = dc.bubbleChart('#map-bubbles-chart')
    .svg(d3.select('#map-bubbles-chart svg'))
    .width(width*1.08)
    .height(height*1.15)
    .dimension(locationDimension)
    .group(locationGroup)
    .keyAccessor(function(p) {
      projected = projection([p.value.long, p.value.lat]);
      return projected ? projected[0] : 0;
    })
    .valueAccessor(function(p) {
      projected = projection([p.value.long, p.value.lat]);
      return projected ? -projected[1] : 0;
    })
    .radiusValueAccessor(function(p) { return p.value.count; })
    .x(d3.scale.linear().domain([0, 960]))
    .y(d3.scale.linear().domain([-500, 0]))
    .title(function(p) {
      taglines = '<li>'+p.value.taglines.join('</li><li>').slice(0,-4);
      return "<div class='bubble-chart__taglines'><h4>"+p.value.location+"</h4><ul>"+taglines+"</ul></div>";
    })
    .renderLabel(false)
  ;

  var types = dc.rowChart('#type-chart')
    .svg(d3.select('#type-chart svg'))
    .width(300)
    .height(400)
    .dimension(typeDimension)
    .group(typeGroup)
    .elasticX(true);
  ;

  var table = dc.dataTable('#stories-table')
    .dimension(typeDimension)
    .group(function(d) { return d; })
    .size(100)
    .columns(['location', 'type', 'tagline', 'summary'])
  ;

  dc.renderAll();
  dc.tooltipMixin(mapBubbles);
  mapBubbles.tip.elements.on('mouseleave', null);
});

// var icons = {
//   "Data issues": '01 or hard drive icon or server icon'
//   "Regulation": 'gavel or scroll'
//   "Worker classification": 'checkmark'
//   "Legacy industry": 'taxi car'
//   "Lobbying": 'whispering'
//   "Predatory finance": ''
//   "Pay":
//   "Corporate citizenship":
//   "Tax":
// };


d3.json("/javascripts/us.json", function(error, us) {

  mapSvg.append("path")
      .attr("class", "states")
      .datum(topojson.feature(us, us.objects.states))
      .attr("d", path);

});

</script>
